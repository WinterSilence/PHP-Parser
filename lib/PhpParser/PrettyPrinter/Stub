<?php declare(strict_types=1);

namespace PhpParser\PrettyPrinter;

use PhpParser\Node\Stmt;

/**
 * Prints PHP stubs.
 */
class Stub extends Standard
{
    protected function pStmt_Property(Stmt\Property $node) : string {
        // hide private property
        if ($node->isPrivate()) {
            return '';
        }

        return $this->pAttrGroups($node->attrGroups)
            . (0 === $node->flags ? 'var ' : $this->pModifiers($node->flags))
            . ($node->type ? $this->p($node->type) . ' ' : '')
            . $this->pCommaSeparated($node->props) . ';';
    }

    protected function pStmt_ClassMethod(Stmt\ClassMethod $node) : string {
        // hide private method
        if ($node->isPrivate()) {
            return '';
        }

        // empty method body
        return $this->pAttrGroups($node->attrGroups)
             . $this->pModifiers($node->flags)
             . 'function ' . ($node->byRef ? '&' : '') . $node->name
             . '(' . $this->pMaybeMultiline($node->params) . ')'
             . (null !== $node->returnType ? ': ' . $this->p($node->returnType) : '')
             . (null !== $node->stmts ? ' {}' : ';');
    }

    protected function pStmt_Function(Stmt\Function_ $node) : string {
        // empty function body
        return $this->pAttrGroups($node->attrGroups)
             . 'function ' . ($node->byRef ? '&' : '') . $node->name
             . '(' . $this->pMaybeMultiline($node->params) . ')'
             . (null !== $node->returnType ? ': ' . $this->p($node->returnType) : '')
             . ' {}';
    }

    /**
     * @inheritDoc
     */
    protected function pComments(array $comments) : string {
        // print only last DocComment
        return \str_replace(["\r\n", "\n"], $this->nl, end($comments)->getReformattedText());
    }

    /**
     * @inheritDoc
     */
    protected function pStmts(array $nodes, bool $indent = true) : string {
        if ($indent) {
            $this->indent();
        }

        $result = '';
        foreach ($nodes as $node) {
            $pNode = $this->p($node);
            if ($pNode === '') {
                continue;
            }
            if (
                $node instanceof Stmt\Property
                || $node instanceof Stmt\Class_
                || $node instanceof Stmt\ClassMethod
                || $node instanceof Stmt\Function_
            ) {
                $docComment = $node->getDocComment();
                if ($docComment !== null) {
                    $result .= $this->nl . $this->pComments([$docComment]);
                }
            }
            if ($node instanceof Stmt\Nop) {
                continue;
            }

            $result .= $this->nl . $pNode;
        }

        if ($indent) {
            $this->outdent();
        }

        return $result;
    }
}
